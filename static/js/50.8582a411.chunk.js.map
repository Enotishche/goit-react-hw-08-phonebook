{"version":3,"file":"static/js/50.8582a411.chunk.js","mappings":"iMAAaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAnB,EAEnBC,EAAY,SAAAF,GAAK,OAAIA,EAAMG,MAAV,EAEjBC,EAAe,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,SAAnB,EAEpBC,EAAW,SAAAN,GAAK,OAAIA,EAAMC,SAASM,KAAnB,EAEhBC,EAAsB,SAAC,GAAwB,IAAvBP,EAAsB,EAAtBA,SAAUE,EAAY,EAAZA,OAE3C,IAAKA,EACD,OAAOF,EAASA,SAGpB,IAAMQ,EAAmBN,EAAOO,oBAQhC,OAPyBT,EAASA,SAASE,QAAO,YAAqB,IAAnBQ,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,OAChDC,EAAiBF,EAAKD,oBACtBI,EAAmBF,EAAOF,oBAEhC,OADeG,EAAeE,SAASN,IAAqBK,EAAiBC,SAASN,EAEzF,GAGJ,ECtBD,EAAwB,2BAAxB,EAA0D,0BAA1D,EAA6F,4B,4BCiC7F,EA5BoB,WAClB,IAAMR,GAAWe,EAAAA,EAAAA,IAAYR,GACvBS,GAAWC,EAAAA,EAAAA,MAOXC,EAAWlB,EAASmB,KAAI,YAA2B,IAAxBT,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OAAQS,EAAS,EAATA,GAC7C,OACE,gBAAaC,UAAWC,EAAxB,UACGZ,EADH,KACWC,GACT,iBAAMY,QAAS,kBATO,SAAAH,GAC1B,IAAMI,GAASC,EAAAA,EAAAA,IAAcL,GAC7BJ,EAASQ,EACV,CAM0BE,CAAoBN,EAA1B,EAA+BC,UAAWC,EAAzD,sBAFOF,EAOZ,IAED,OACE,iCACE,eAAIC,UAAWC,EAAf,uBACA,wBAAKJ,MAGV,E,wCC/BD,EAA4B,kCAA5B,EAAoE,4BCK9DS,EAAO,CACXjB,KAAM,GACNC,OAAQ,IAkEV,EA/DuB,WACrB,OAAwBiB,EAAAA,EAAAA,UAASD,GAAjC,eAAOE,EAAP,KAAaC,EAAb,KACQpB,EAAiBmB,EAAjBnB,KAAMC,EAAWkB,EAAXlB,OACRX,GAAWe,EAAAA,EAAAA,IAAYjB,GACvBkB,GAAWC,EAAAA,EAAAA,MAEXc,GAASC,EAAAA,EAAAA,MACTC,GAAWD,EAAAA,EAAAA,MAEXE,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdzB,EAAgByB,EAAhBzB,KAAM0B,EAAUD,EAAVC,MACdN,GAAQ,SAAAO,GAAS,yBAAUA,GAAV,cAAsB3B,EAAO0B,GAA7B,GAClB,EAcD,OACE,kBAAME,SAba,SAAAC,GAGnB,GAFAA,EAAEC,iBAEExC,EAASyC,MAAO,SAAAC,GAAO,OAAIA,EAAQhC,KAAKiC,gBAAkBjC,EAAKiC,eAAiBD,EAAQ/B,SAAWA,CAA5E,IAEzB,OAAOiC,MAAM,GAAD,OAAIlC,EAAJ,gBAAgBC,EAAhB,kCAEZK,GAAS6B,EAAAA,EAAAA,IAAW,CAAEnC,KAAAA,EAAMC,OAAQA,KAEtCmB,EAAQH,EACT,EAGC,WACE,iBAAKN,UAAWC,EAAhB,WACE,kBAAOwB,QAASf,EAAhB,qBACA,kBACEgB,KAAK,OACLrC,KAAK,OACLsC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACR9B,GAAIW,EACJK,MAAO1B,EACPyC,SAAUjB,EACVb,UAAU,QACV+B,YAAY,aAGhB,iBAAK/B,UAAWC,EAAhB,WACE,kBAAOwB,QAASb,EAAhB,uBACA,kBACEb,GAAIa,EACJvB,KAAK,SACL0B,MAAOzB,EACPwC,SAAUjB,EACVb,UAAU,QACV+B,YAAY,SACZL,KAAK,MACLC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQ7B,UAAWC,EAAnB,2BAGL,ECvED,EAAyB,uB,UC2BzB,EAvBuB,WACrB,IAAMN,GAAWC,EAAAA,EAAAA,MACXoC,GAActC,EAAAA,EAAAA,IAAYd,GAMhC,OACE,4BACE,mDACA,kBACE8C,KAAK,OACLrC,KAAK,SACLyC,SAVe,SAAAZ,GACnBvB,GAASsC,EAAAA,EAAAA,GAAUf,EAAEgB,cAAcnB,OACpC,EASKA,MAAOiB,EACPhC,UAAWC,EACX8B,YAAY,aAInB,ECzBD,EAA4B,6BAA5B,EAAiE,yBAAjE,EAAyG,gC,UCsCzG,EA5BkB,WAChB,IAAMpC,GAAWC,EAAAA,EAAAA,MACXjB,GAAWe,EAAAA,EAAAA,IAAYR,GACvBH,GAAYW,EAAAA,EAAAA,IAAYZ,GACxBG,GAAQS,EAAAA,EAAAA,IAAYV,GAK1B,OAJAmD,EAAAA,EAAAA,YAAU,WACRxC,GAASyC,EAAAA,EAAAA,MACV,GAAE,CAACzC,KAGF,gCACGV,GAASsC,MAAM,gCAAD,OAAiCtC,IAC/CF,GAAY,SAACsD,EAAA,EAAD,KACb,iBAAKrC,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,uBACA,iBAAKD,UAAWC,EAAhB,WACE,0BACE,SAAC,EAAD,OAEF,SAAC,EAAD,KACA,SAAC,EAAD,KACEtB,EAAS2D,SAAU,6DAK9B,ECnCc,SAASC,IACpB,OACI,0BACI,SAAC,EAAD,KAGX,C,wDCPM,IAkBI5B,EAAS,eAAC6B,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAAC7C,EAAI8C,GAWvD,OARE9C,IAFF8C,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["redux/selectors.js","webpack://react-homework-template/./src/components/Phonebook/ContactList/ContactList.module.css?f152","components/Phonebook/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Phonebook/FormAddContact/FormAddContact.module.css?bf91","components/Phonebook/FormAddContact/FormAddContact.jsx","webpack://react-homework-template/./src/components/Phonebook/Filter/Filter.module.css?44e1","components/Phonebook/Filter/ContactsFilter.jsx","webpack://react-homework-template/./src/components/Phonebook/Phonebook.module.css?3a02","components/Phonebook/Phonebook.jsx","Pages/ContactPage/ContactsPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["export const getContacts = state => state.contacts.contacts;\n\nexport const getFilter = state => state.filter;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilteredContacts = ({contacts, filter}) => {  \n    \n    if (!filter) {\n        return contacts.contacts;\n    }\n\n    const normalizedFilter = filter.toLocaleLowerCase();\n    const filteredContacts = contacts.contacts.filter(({name, number}) => {\n        const normalizedName = name.toLocaleLowerCase();\n        const normalizedNumber = number.toLocaleLowerCase();\n        const result = normalizedName.includes(normalizedFilter) || normalizedNumber.includes(normalizedFilter);\n        return result;\n    })\n    \n    return filteredContacts;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactList_title__9L2pD\",\"item\":\"ContactList_item__bG316\",\"remove\":\"ContactList_remove__+YVta\"};","import styles from './ContactList.module.css';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeContact } from 'redux/Contacts/operations';\nimport { getFilteredContacts } from 'redux/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  const handleRemoveContact = id => {\n    const action = removeContact(id);\n    dispatch(action);\n  };\n\n  const elements = contacts.map(({ name, number, id }) => {\n    return (\n      <li key={id} className={styles.item}>\n        {name}: {number}\n        <span onClick={() => handleRemoveContact(id)} className={styles.remove}>\n          delete\n        </span>\n      </li>\n    );\n  });\n\n  return (\n    <>\n      <h4 className={styles.title}>Contacts</h4>\n      <ol>{elements}</ol>\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"formGroup\":\"FormAddContact_formGroup__rjYFL\",\"btn\":\"FormAddContact_btn__N3Fz3\"};","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport styles from './FormAddContact.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/Contacts/operations';\nimport { getContacts } from 'redux/selectors';\nconst init = {\n  name: '',\n  number: '',\n};\n\nconst FormAddContact = () => {\n  const [form, setForm] = useState(init);\n  const { name, number } = form;\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const nameId = nanoid();\n  const numberId = nanoid();\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setForm(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (contacts.find ( contact => contact.name.toLowerCase() === name.toLowerCase() || contact.number === number\n      )) {\n      return alert(`${name} and ${number} is already in contacts list.`);\n    } else {\n      dispatch(addContact({ name, number: number }));\n    }\n    setForm(init);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={styles.formGroup}>\n        <label htmlFor={nameId}>Name: </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          id={nameId}\n          value={name}\n          onChange={handleChange}\n          className=\"field\"\n          placeholder=\"Name\"\n        />\n      </div>\n      <div className={styles.formGroup}>\n        <label htmlFor={numberId}>Number: </label>\n        <input\n          id={numberId}\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          className=\"field\"\n          placeholder=\"Number\"\n          type=\"tel\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n      <button className={styles.btn}>Add contact</button>\n    </form>\n  );\n};\n\nexport default FormAddContact;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__ESc4Y\"};","import styles from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/Filter/Filter-slice';\nimport { getFilter } from 'redux/selectors';\n\nconst ContactsFilter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(getFilter);\n\n  const handleChange = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <div>\n      <h3>Find contacts by name</h3>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleChange}\n        value={filterValue}\n        className={styles.filter}\n        placeholder=\"Filter\"\n      />\n    </div>\n  );\n};\n\nexport default ContactsFilter;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Phonebook_container__u4h5I\",\"title\":\"Phonebook_title__ipARL\",\"contactBlock\":\"Phonebook_contactBlock__4Uzwi\"};","import { useSelector } from 'react-redux';\nimport { getFilteredContacts, getIsLoading, getError } from 'redux/selectors';\nimport ContactList from './ContactList/ContactList';\nimport FormAddContact from './FormAddContact/FormAddContact';\nimport ContactsFilter from './Filter/ContactsFilter';\nimport styles from './Phonebook.module.css';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/Contacts/operations';\nimport Loader from '../Loader/Loader';\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getFilteredContacts);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {error && alert(`something wrong! PHONEBOOK:  ${error}`)}\n      {isLoading ? <Loader /> : \n      <div className={styles.container}>\n        <h2 className={styles.title}>Contacts</h2>\n        <div className={styles.contactBlock}>\n          <div>\n            <FormAddContact />\n          </div>\n          <ContactsFilter />\n          <ContactList />\n          {!contacts.length && <p>There are no contacts yet</p>}\n        </div>\n      </div>}\n    </>\n  );\n};\n\nexport default Phonebook;\n","import Phonebook from \"components/Phonebook/Phonebook\";\n\nexport default function ContactsPage () {\n    return (\n        <div>\n            <Phonebook />\n        </div>\n    )\n}\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["getContacts","state","contacts","getFilter","filter","getIsLoading","isLoading","getError","error","getFilteredContacts","normalizedFilter","toLocaleLowerCase","name","number","normalizedName","normalizedNumber","includes","useSelector","dispatch","useDispatch","elements","map","id","className","styles","onClick","action","removeContact","handleRemoveContact","init","useState","form","setForm","nameId","nanoid","numberId","handleChange","target","value","prevState","onSubmit","e","preventDefault","find","contact","toLowerCase","alert","addContact","htmlFor","type","pattern","title","required","onChange","placeholder","filterValue","setFilter","currentTarget","useEffect","fetchContacts","Loader","length","ContactsPage","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}